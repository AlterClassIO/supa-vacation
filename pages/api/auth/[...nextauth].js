import NextAuth from 'next-auth';
import nodemailer from 'nodemailer';
import { PrismaAdapter } from '@next-auth/prisma-adapter';
import { PrismaClient } from '@prisma/client';
import EmailProvider from "next-auth/providers/email";
import Handlebars from 'handlebars';
import GoogleProvider from 'next-auth/providers/google';
import path from 'path';

// Instantiate Prisma Client
const prisma = new PrismaClient();

// Email sender Êñ∞Ë¶è„É¶„Éº„Ç∂„Éº„Å´„Ç¶„Çß„É´„Ç´„É†„É°„Éº„É´„ÇíÈÄÅ‰ø°
// const transporter = nodemailer.createTransport({
//     host: process.env.EMAIL_SERVER_HOST,
//     port: process.env.EMAIL_SERVER_PORT,
//     auth: {
//       user: process.env.EMAIL_SERVER_USER,
//       pass: process.env.EMAIL_SERVER_PASSWORD,
//     },
//     secure: true,
// });

// „É°„Éº„É´„Éó„É≠„Éê„Ç§„ÉÄ„ÅÆË®≠ÂÆö
const emailsDir = path.resolve(process.cwd(), 'emails');
// 1.„Åæ„Åö„ÄÅÁ¢∫Ë™ç„É°„Éº„É´„ÅÆ„Éï„Ç°„Ç§„É´„ÇíË™≠„Åø„ÄÅHandlebars „Çí‰Ωø„Å£„Å¶„ÉÜ„É≥„Éó„É¨„Éº„Éà„Çí‰ΩúÊàê„Åó„ÄÅÂãïÁöÑ„Å™ÂÄ§„ÇíÊ≥®ÂÖ•„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ
// 2.Ê¨°„Å´„ÄÅtransporter „Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çí‰ΩøÁî®„Åó„Å¶„ÄÅÈñ¢Êï∞„ÅÆÂºïÊï∞„ÅßÂèñÂæó„Åó„Åü„É¶„Éº„Ç∂„ÅÆ„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíË≠òÂà•Â≠ê„Å®„Åó„Å¶„É°„Éº„É´„ÇíÈÄÅ‰ø°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ
// 3.ÊúÄÂæå„Å´„ÄÅsendMail Èñ¢Êï∞„ÅÆ html „Ç™„Éó„Ç∑„Éß„É≥„ÅØ„ÄÅ„Éû„Ç∏„ÉÉ„ÇØ„É™„É≥„ÇØ„ÇÑ„É¶„Éº„Ç∂„Éº„ÅÆ„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„Å™„Å©„ÄÅ„ÅÑ„Åè„Å§„Åã„ÅÆÂÄ§„ÇíÊ≥®ÂÖ•„Åó„ÄÅHandlebars „Åß„Ç≥„É≥„Éë„Ç§„É´„Åó„ÅüÂæå„ÅÆ„É°„Éº„É´„ÅÆ HTML „ÇíÂèó„ÅëÂèñ„Çä„Åæ„Åô„ÄÇ
// ‰ª•‰∏ã„ÅØ„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Å´„É≠„Ç∞„Ç§„É≥„Åó„Çà„ÅÜ„Å®„Åó„Åü„Å®„Åç„Å´Âèó„ÅëÂèñ„Çã„Åπ„Åç„É°„Éº„É´„Åß„Åô„ÄÇ
// const sendVerificationRequest = ({ identifier, url }) => {
//     const emailFile = readFileSync(path.join(emailsDir, 'confirm-email.html'), {
//       encoding: 'utf8',
//     });
//     const emailTemplate = Handlebars.compile(emailFile);
//     transporter.sendMail({
//       from: `"‚ú® SupaVacation" ${process.env.EMAIL_FROM}`,
//       to: identifier,
//       subject: 'Your sign-in link for SupaVacation',
//       html: emailTemplate({
//         base_url: process.env.NEXTAUTH_URL,
//         signin_url: url,
//         email: identifier,
//       }),
//     });
// };

// „Åì„ÅÆ„Ç§„Éô„É≥„Éà„ÅØ„ÄÅ„Çµ„Ç§„É≥„Ç§„É≥ÊôÇ„Å´„Ç¢„ÉÄ„Éó„ÇøÔºàPrismaÔºâ„ÅåÊñ∞Ë¶è„É¶„Éº„Ç∂„Çí‰ΩúÊàê„Åó„Åü„Å®„Åç„Å´„ÄÅNextAuth„Åã„ÇâÂëº„Å≥Âá∫„Åï„Çå„ÇãÈùûÂêåÊúüÈñ¢Êï∞„Åß„Åô„ÄÇ
// „Åì„ÅÆ„Çà„ÅÜ„Å™„Ç§„Éô„É≥„Éà„ÅåÁô∫Áîü„Åó„Åü„Å®„Åç„Å´„ÄÅÂâØ‰ΩúÁî®„ÇíÂÆüË°å„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÅÆ„Åß„ÄÅÈùûÂ∏∏„Å´‰æøÂà©„Åß„Åô„ÄÇ
const sendWelcomeEmail = async ({ user }) => {
    const { email } = user;

    try {
      const emailFile = readFileSync(path.join(emailsDir, 'welcome.html'), {
        encoding: 'utf8',
      });
      const emailTemplate = Handlebars.compile(emailFile);
      await transporter.sendMail({
        from: `"‚ú® SupaVacation" ${process.env.EMAIL_FROM}`,
        to: email,
        subject: 'Welcome to SupaVacation! üéâ',
        html: emailTemplate({
          base_url: process.env.NEXTAUTH_URL,
          support_email: 'support@themodern.dev',
        }),
      });
    } catch (error) {
      console.log(`‚ùå Unable to send welcome email to user (${email})`);
    }
};

export default NextAuth({
    pages: {
        signIn: '/',
        signOut: '/',
        error: '/',
        verifyRequest: '/',
      },
    providers: [
      EmailProvider({
        server: {
            host: process.env.EMAIL_SERVER_HOST,
            port: process.env.EMAIL_SERVER_PORT,
            auth: {
              user: process.env.EMAIL_SERVER_USER,
              pass: process.env.EMAIL_SERVER_PASSWORD,
            },
          },
        from: process.env.EMAIL_FROM,
        maxAge: 10 * 60, // Magic links are valid for 10 min only
        // sendVerificationRequest,
      }),
      GoogleProvider({
        clientId: process.env.GOOGLE_ID,
        clientSecret: process.env.GOOGLE_SECRET,
      }),
    ],
    adapter: PrismaAdapter(prisma),
    events: { createUser: sendWelcomeEmail }
  });


// import NextAuth from 'next-auth';
// import EmailProvider from 'next-auth/providers/email';
// import GoogleProvider from 'next-auth/providers/google';
// import { PrismaAdapter } from '@next-auth/prisma-adapter';
// // import { prisma } from '@/lib/prisma';
// import nodemailer from 'nodemailer';
// // import Handlebars from 'handlebars';
// import { readFileSync } from 'fs';
// import path from 'path';

// const prisma = new PrismaClient();
// // Email sender
// const transporter = nodemailer.createTransport({
//   host: process.env.EMAIL_SERVER_HOST,
//   port: process.env.EMAIL_SERVER_PORT,
//   auth: {
//     user: process.env.EMAIL_SERVER_USER,
//     pass: process.env.EMAIL_SERVER_PASSWORD,
//   },
//   secure: true,
// });

// const emailsDir = path.resolve(process.cwd(), 'emails');

// const sendVerificationRequest = ({ identifier, url }) => {
//   const emailFile = readFileSync(path.join(emailsDir, 'confirm-email.html'), {
//     encoding: 'utf8',
//   });
//   const emailTemplate = Handlebars.compile(emailFile);
//   transporter.sendMail({
//     from: `"‚ú® SupaVacation" ${process.env.EMAIL_FROM}`,
//     to: identifier,
//     subject: 'Your sign-in link for SupaVacation',
//     html: emailTemplate({
//       base_url: process.env.NEXTAUTH_URL,
//       signin_url: url,
//       email: identifier,
//     }),
//   });
// };

// const sendWelcomeEmail = async ({ user }) => {
//   const { email } = user;

//   try {
//     const emailFile = readFileSync(path.join(emailsDir, 'welcome.html'), {
//       encoding: 'utf8',
//     });
//     const emailTemplate = Handlebars.compile(emailFile);
//     await transporter.sendMail({
//       from: `"‚ú® SupaVacation" ${process.env.EMAIL_FROM}`,
//       to: email,
//       subject: 'Welcome to SupaVacation! üéâ',
//       html: emailTemplate({
//         base_url: process.env.NEXTAUTH_URL,
//         support_email: 'support@themodern.dev',
//       }),
//     });
//   } catch (error) {
//     console.log(`‚ùå Unable to send welcome email to user (${email})`);
//   }
// };

// export default NextAuth({
//   pages: {
//     signIn: '/',
//     signOut: '/',
//     error: '/',
//     verifyRequest: '/',
//   },
//   providers: [
//     EmailProvider({
//       maxAge: 10 * 60,
//       sendVerificationRequest,
//     }),
//     GoogleProvider({
//       clientId: process.env.GOOGLE_ID,
//       clientSecret: process.env.GOOGLE_SECRET,
//     }),
//   ],
//   adapter: PrismaAdapter(prisma),
//   events: { createUser: sendWelcomeEmail },
// });
